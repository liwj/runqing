<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jynine.dao.EmployeeDao" >
  <resultMap id="BaseResultMap" type="com.jynine.model.Employee" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name_cn" property="nameCn" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="birth" property="birth" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="emp_num" property="empNum" jdbcType="VARCHAR" />
    <result column="emp_type_id" property="empTypeId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="salary" property="salary" jdbcType="DOUBLE" />
    <result column="emp_type_name" property="empTypeName" jdbcType="VARCHAR" />
    <result column="name_en" property="nameEn" jdbcType="VARCHAR" />
    <result column="entry_time" property="entryTime" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name_cn, age, birth, address, phone, emp_num, emp_type_id, status, sex, salary, 
    emp_type_name, name_en, entry_time
  </sql>
  <select id="findEmployee" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from Employee
    where id = #{empId,jdbcType=INTEGER}
  </select>
  <insert id="insertSelective" parameterType="com.jynine.model.Employee" >
    insert into Employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="nameCn != null" >
        name_cn,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="birth != null" >
        birth,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="empNum != null" >
        emp_num,
      </if>
      <if test="empTypeId != null" >
        emp_type_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="salary != null" >
        salary,
      </if>
      <if test="empTypeName != null" >
        emp_type_name,
      </if>
      <if test="nameEn != null" >
        name_en,
      </if>
      <if test="entryTime != null" >
        entry_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nameCn != null" >
        #{nameCn,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="birth != null" >
        #{birth,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="empNum != null" >
        #{empNum,jdbcType=VARCHAR},
      </if>
      <if test="empTypeId != null" >
        #{empTypeId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=DOUBLE},
      </if>
      <if test="empTypeName != null" >
        #{empTypeName,jdbcType=VARCHAR},
      </if>
      <if test="nameEn != null" >
        #{nameEn,jdbcType=VARCHAR},
      </if>
      <if test="entryTime != null" >
        #{entryTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jynine.model.Employee" >
    update Employee
    <set >
      <if test="nameCn != null" >
        name_cn = #{nameCn,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="birth != null" >
        birth = #{birth,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="empNum != null" >
        emp_num = #{empNum,jdbcType=VARCHAR},
      </if>
      <if test="empTypeId != null" >
        emp_type_id = #{empTypeId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=DOUBLE},
      </if>
      <if test="empTypeName != null" >
        emp_type_name = #{empTypeName,jdbcType=VARCHAR},
      </if>
      <if test="nameEn != null" >
        name_en = #{nameEn,jdbcType=VARCHAR},
      </if>
      <if test="entryTime != null" >
        entry_time = #{entryTime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jynine.model.Employee" >
    update Employee
    set name_cn = #{nameCn,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      birth = #{birth,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      emp_num = #{empNum,jdbcType=VARCHAR},
      emp_type_id = #{empTypeId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      sex = #{sex,jdbcType=INTEGER},
      salary = #{salary,jdbcType=DOUBLE},
      emp_type_name = #{empTypeName,jdbcType=VARCHAR},
      name_en = #{nameEn,jdbcType=VARCHAR},
      entry_time = #{entryTime,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="findEmployeesByPage" parameterType="map" resultMap="BaseResultMap">
      select 
      	<include refid="Base_Column_List" />
      from 
      	employee where 1=1
      	<if test="name!=null">
      	and (name_cn = #{name} or name_en = #{name})
      	</if>
      order by 
      	entry_time asc
      LIMIT #{startLine}, #{pageSize}
  </select>
  <select id="findEmployeesCountByPage" parameterType="map" resultType="int">
      select 
      	count(1)
      from 
      	Employee where 1=1
      <if test="name!=null">
      	and (name_cn = #{name} or name_en = #{name})
      	</if>
  </select>
</mapper>